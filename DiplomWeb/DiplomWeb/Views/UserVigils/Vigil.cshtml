@using Newtonsoft.Json;
@{
    ViewBag.Title = "Дежуоство по @ViewBag.VigilName";
}
@section Styles{
    @Styles.Render("~/Content/calendar")
}
<h2>Дежуоство: @ViewBag.VigilName</h2>

<div class="row">
    <div class="col-md-8">
        <div id="calendar"></div>
    </div>
    <div class="col-md-4">
        <h4>Дежурства</h4>
        <ul>
            @foreach (DiplomWeb.Models.Vigil item in ViewBag.Vigil)
            {

                <li>@Html.ActionLink(item.Name, "Vigil", "UserVigils", new { id = item.Id }, null) </li>
            }
        </ul>
    </div>
    @Html.ActionLink("Сводный график", "Sheduler","UserVigils",new { id = ViewBag.VigilId},null)

</div>

<div class="modal fade" id="ModalAdd" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <form class="form-horizontal" id="addEvent" method="POST" action="@Url.Action("SaveDate")">

                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Add Event</h4>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="title" class="col-sm-2 control-label">Дежурный</label>
                        <div class="col-sm-10">
                            <input type="text" name="title" class="form-control" id="title" placeholder="Title" value="@ViewBag.UserName" readonly>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="discription" class="col-sm-2 control-label">Описание</label>
                        <div class="col-sm-10"> 
                            @Html.TextArea("description", htmlAttributes: new { @class = "form-control", id = "description" , rows = "5" })
                          
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="color" class="col-sm-2 control-label">Color</label>
                        <div class="col-sm-10">
                            <select name="color" class="form-control" id="color">
                                <option value="">Choose</option>
                                <option style="color:#0071c5;" value="#0071c5">&#9724; Dark blue</option>
                                <option style="color:#40E0D0;" value="#40E0D0">&#9724; Turquoise</option>
                                <option style="color:#008000;" value="#008000">&#9724; Green</option>
                                <option style="color:#FFD700;" value="#FFD700">&#9724; Yellow</option>
                                <option style="color:#FF8C00;" value="#FF8C00">&#9724; Orange</option>
                                <option style="color:#FF0000;" value="#FF0000">&#9724; Red</option>
                                <option style="color:#000;" value="#000">&#9724; Black</option>

                            </select>
                        </div>
                    </div>
                    @*<div class="form-group">
                        <label for="start" class="col-sm-2 control-label">Дежурство</label>
                        <div class="col-sm-10">
                            @Html.DropDownList("vigilId", ViewBag.VigilId as SelectList,
                            htmlAttributes: new { @class = "form-control" })
                        </div>
                    </div>*@


                    <div class="form-group">
                        <label for="start" class="col-sm-2 control-label">Дежурство</label>
                        <div class="col-sm-10">
                            <input type="text" value="@ViewBag.VigilName"  class="form-control" readonly />
                            <input type="hidden" name="vigilId" value="@ViewBag.VigilId"/>
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="start" class="col-sm-2 control-label">Start date</label>
                        <div class="col-sm-10">
                            <input type="text" name="startAt" class="form-control" id="start" readonly>
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="end" class="col-sm-2 control-label">End date</label>
                        <div class="col-sm-10">
                            <input type="text" name="endAt" class="form-control" id="end" readonly>
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default closing" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save changes</button>
                </div>
            </form>
        </div>
    </div>
</div>



<!-- Modal -->
<div class="modal fade" id="ModalEdit" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <form class="form-horizontal" id="changeEvent" method="POST" action="@Url.Action("ChangeEvent")">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Edit Event</h4>
                </div>
                <div class="modal-body">

                    <div class="form-group">
                        <label for="title" class="col-sm-2 control-label">Дежурный</label>
                        <div class="col-sm-10">
                            <input type="text" name="title" class="form-control" id="title" placeholder="Title">
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="discription" class="col-sm-2 control-label">Описание</label>
                        <div class="col-sm-10">
                            @Html.TextArea("description", htmlAttributes: new { @class = "form-control", id = "description", rows = "5" })

                        </div>
                    </div>

                    <div class="form-group">
                        <label for="color" class="col-sm-2 control-label">Color</label>
                        <div class="col-sm-10">
                            <select name="color" class="form-control" id="color">
                                <option value="">Choose</option>
                                <option style="color:#0071c5;" value="#0071c5">&#9724; Dark blue</option>
                                <option style="color:#40E0D0;" value="#40E0D0">&#9724; Turquoise</option>
                                <option style="color:#008000;" value="#008000">&#9724; Green</option>
                                <option style="color:#FFD700;" value="#FFD700">&#9724; Yellow</option>
                                <option style="color:#FF8C00;" value="#FF8C00">&#9724; Orange</option>
                                <option style="color:#FF0000;" value="#FF0000">&#9724; Red</option>
                                <option style="color:#000;" value="#000">&#9724; Black</option>

                            </select>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-offset-2 col-sm-10">
                            <a id="DeleteLink" href="@Url.Action("DeleteEvent")">Delete</a>
                        </div>
                    </div>

                    <input type="hidden" name="id" class="form-control" id="id">


                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default closing" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save changes</button>
                </div>
            </form>
        </div>
    </div>
</div>


@section Scripts{
    @Scripts.Render("~/bundles/calendar")
    <script>
    
        var events =@Html.Raw(JsonConvert.SerializeObject(ViewBag.Record));
  

        $(function () {
            var calendar = $('#calendar').fullCalendar({
                header: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'month,basicWeek,basicDay'
                },
                events: events,
                color: 'yellow',
                textColor: 'black',
                selectable: true,
                selectHelper: true,
                editable: true,
                select: function (start, end) {


                    $('#ModalAdd #start').val(moment(start).format('YYYY-MM-DD HH:mm:ss'));
                    $('#ModalAdd #end').val(moment(end).format('YYYY-MM-DD HH:mm:ss'));
                    $('#ModalAdd').modal('show');
                },

                eventRender: function (event, element) {
                    element.bind('dblclick', function () {
                        if (event.editable!==false) {
                            $('#ModalEdit #id').val(event._id);
                            $('#ModalEdit #description').val(event.description);
                            $('#DeleteLink').attr('data-delet-id', event._id);
                            $('#ModalEdit #title').val(event.title);
                            $('#ModalEdit #color').val(event.color);
                            $('#ModalEdit').modal('show');
                        }
                    });
                },
                eventDrop: function (event, delta, revertFunc) { // si changement de position

                    edit(event);

                },
                eventResize: function (event, dayDelta, minuteDelta, revertFunc) { // si changement de longueur

                    edit(event);

                }

                //eventDrop: function (event, delta) {
                //    start = event.start.format();
                //    end = event.end.format();
                //    $.ajax({
                //        url: '/RecordVigils/UpdateDate',
                //        data: {startAt:start,endAt:end,title:event.title},
                //        type: "POST",
                //        success: function (json) {
                //            alert("OK");
                //        }
                //    });
                //},
                //eventResize: function (event) {
                //    start = event.start.format();
                //    end = event.end.format();
                //    $.ajax({
                //        url: '/RecordVigils/UpdateDate',
                //        data: { startAt: start, endAt: end, title: event.title},
                //        type: "POST",
                //        success: function (json) {
                //            alert("OK");
                //        }
                //    });

                //}
            });

            $('#addEvent').submit(function (e) {
                var $form = $(this);
                $.ajax({
                    type: $form.attr('method'),
                    url: $form.attr('action'),
                    data: $form.serialize()
                }).done(function (data) {
                    console.log('success');
                    calendar.fullCalendar('renderEvent',
                         {
                             id:data.Id,
                             title: data.title,
                             start: new Date(parseInt(data.start.substr(6))),
                             end: new Date(parseInt(data.end.substr(6))),
                             color:data.color,
                             allDay:true
                         },
                         true // make the event "stick"
                         );
                    $("#ModalAdd").find(".closing").trigger("click");
                }).fail(function () {
                    console.log('fail');

                });
                //отмена действия по умолчанию для кнопки submit
                e.preventDefault();
            });

            $('#changeEvent').submit(function (e) {
                var $form = $(this);
                $.ajax({
                    type: $form.attr('method'),
                    url: $form.attr('action'),
                    data: $form.serialize()
                }).done(function (data) {
                    console.log('success');
                    //if (data.delete = true) {
                    //    calendar.fullCalendar( 'removeEvents', data.id)
                    //} else {
                    var event =  calendar.fullCalendar('clientEvents', data.id);
                    event[0].title = data.title;
                    event[0].color = data.color;
                    event[0].description = data.description;
                    calendar.fullCalendar('updateEvent', event[0]);
                    //}

                    $("#ModalEdit").find(".closing").trigger("click");
                }).fail(function () {
                    console.log('fail');

                });
                //отмена действия по умолчанию для кнопки submit
                e.preventDefault();
            });

            $('#DeleteLink').click(function (e) {

                var url = $(this).attr('href');
                var id = $(this).attr('data-delet-id');
                $.ajax({
                    type: "POST",
                    url: url,
                    data:{id:id},
                }).done(function (data) {
                    console.log('success');
                    calendar.fullCalendar( 'removeEvents', data.id)



                    $("#ModalEdit").find(".closing").trigger("click");
                }).fail(function () {
                    console.log('fail');

                });
                //отмена действия по умолчанию для кнопки submit
                e.preventDefault();
            });
        });

        function edit(event) {
            start = event.start.format('YYYY-MM-DD HH:mm:ss');
            if (event.end) {
                end = event.end.format('YYYY-MM-DD HH:mm:ss');
            } else {
                end = start;
            }

            id = event.id;

            $.ajax({
                url: '/UserVigils/UpdateDate',
                type: "POST",
                data: {id:id, startAt: start, endAt: end },
                success: function (rep) {

                    alert('Saved');

                }
            });
        }

        function GetEvents() {
            $.ajax({
                async:false,
                url: '/UserVigils/GetEvents',
                success: function (data) {
                    $.each(data,function(index,value){
                        events.push({
                            id:value.Id,
                            title: value.Title,
                            description:value.Description,
                            start: new Date(parseInt(value.StartAt.substr(6))),
                            end: new Date(parseInt(value.EndAt.substr(6))),
                            allDay: value.IsFullDay,
                            color: value.Color,
                            editable: value.Editable
                        });
                    })
                }

            });
        }


    </script>
    
}